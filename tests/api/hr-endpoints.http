# üß™ TESTS API - MODULE RH S√âCURIS√â
# Collection de tests pour Thunder Client / REST Client

### Variables
@baseUrl = https://your-site.vercel.app/api/hr
@tenantId = demo

### Headers communs
@headers = Content-Type: application/json
           x-tenant-id: {{tenantId}}

###
# üè¢ EMPLOYEES API TESTS
###

### Test 1: Cr√©er un employ√© avec donn√©es minimales
POST {{baseUrl}}/employees
{{headers}}

{
  "first_name": "Jean",
  "last_name": "Dupont",
  "phone_number": "514-555-0123",
  "emergency_contact_name": "Marie Dupont",
  "emergency_contact_phone": "514-555-0124",
  "employee_number": "EMP001",
  "department": "Construction",
  "position": "Ouvrier sp√©cialis√©",
  "role": "worker",
  "employment_status": "active"
}

### Test 2: R√©cup√©rer tous les employ√©s avec donn√©es de s√©curit√©
GET {{baseUrl}}/employees?includeSafety=true&status=active
{{headers}}

### Test 3: R√©cup√©rer employ√©s par d√©partement
GET {{baseUrl}}/employees?department=Construction&includeSafety=true
{{headers}}

### Test 4: Mettre √† jour un employ√© (remplacer EMPLOYEE_ID)
PUT {{baseUrl}}/employees
{{headers}}

{
  "id": "EMPLOYEE_ID_HERE",
  "first_name": "Jean-Marc",
  "position": "Superviseur",
  "role": "supervisor",
  "certifications": {
    "permis_conduire": {
      "valid": true,
      "expiry": "2026-12-31",
      "issuer": "SAAQ",
      "doc_id": "DL-ABC123",
      "last_verified_at": "2025-08-26",
      "critical": false
    }
  }
}

###
# üõ°Ô∏è SAFETY RECORDS API TESTS  
###

### Test 5: R√©cup√©rer tous les dossiers de s√©curit√©
GET {{baseUrl}}/safety?include_employee=true
{{headers}}

### Test 6: Cr√©er dossier de s√©curit√© initial
POST {{baseUrl}}/safety
{{headers}}

{
  "employee_id": "EMPLOYEE_ID_HERE",
  "safety_score": 90.0,
  "punctuality_score": 95.0,
  "ast_filled": 5,
  "ast_participated": 8,
  "incidents": 0,
  "near_misses": 1,
  "training_completed": [
    {
      "name": "Formation SST de base",
      "date": "2025-01-15",
      "valid_until": "2027-01-15"
    }
  ]
}

### Test 7: Mettre √† jour scores de s√©curit√©
PUT {{baseUrl}}/safety
{{headers}}

{
  "employee_id": "EMPLOYEE_ID_HERE",
  "incidents": 1,
  "ast_participated": 10,
  "safety_score": 85.0
}

###
# üí∞ BILLING API TESTS
###

### Test 8: Cr√©er profil de facturation client
POST {{baseUrl}}/billing
{{headers}}

{
  "rate_normal": 145.00,
  "rate_overtime_1_5": 217.50,
  "rate_overtime_2_0": 290.00,
  "per_diem_rate": 85.00,
  "vehicle_rate_light": 0.72,
  "vehicle_rate_trailer": 0.76,
  "custom_rates": {
    "supervision": 165.00,
    "emergency_call": 220.00,
    "specialized_equipment": 185.00,
    "weekend_premium": 1.30,
    "holiday_premium": 2.10
  },
  "currency": "CAD",
  "tax_rate": 0.14975,
  "rounding_minutes": 15,
  "minimum_billable_hours": 0.25,
  "payment_terms_days": 30,
  "invoice_prefix": "CSR"
}

### Test 9: R√©cup√©rer profil de facturation
GET {{baseUrl}}/billing?tenant_id={{tenantId}}
{{headers}}

### Test 10: Mettre √† jour taux de facturation
PUT {{baseUrl}}/billing
{{headers}}

{
  "rate_normal": 150.00,
  "rate_overtime_1_5": 225.00,
  "custom_rates": {
    "supervision": 170.00,
    "emergency_call": 230.00,
    "specialized_equipment": 190.00,
    "weekend_premium": 1.35,
    "holiday_premium": 2.20
  }
}

###
# üìú CERTIFICATIONS API TESTS
###

### Test 11: R√©cup√©rer certifications d'un employ√©
GET {{baseUrl}}/certifications?employee_id=EMPLOYEE_ID_HERE
{{headers}}

### Test 12: V√©rifier certifications expirantes (30 jours)
GET {{baseUrl}}/certifications?employee_id=EMPLOYEE_ID_HERE&check_expiring=true&warning_days=30
{{headers}}

### Test 13: Mettre √† jour une certification
PUT {{baseUrl}}/certifications
{{headers}}

{
  "employee_id": "EMPLOYEE_ID_HERE",
  "certification_type": "chariot_elevateur",
  "valid": true,
  "expiry": "2026-06-15",
  "issuer": "CNESST",
  "doc_id": "FLT-7890"
}

### Test 14: Validation assignation AST - Mode strict
POST {{baseUrl}}/certifications
{{headers}}

{
  "employee_id": "EMPLOYEE_ID_HERE",
  "required_certifications": ["chariot_elevateur", "travail_hauteur"],
  "strict_mode": true
}

### Test 15: Validation assignation AST - Mode souple
POST {{baseUrl}}/certifications
{{headers}}

{
  "employee_id": "EMPLOYEE_ID_HERE",
  "required_certifications": ["permis_conduire", "premiers_secours"],
  "strict_mode": false
}

### Test 16: Mise √† jour en lot des certifications
PATCH {{baseUrl}}/certifications
{{headers}}

{
  "employee_id": "EMPLOYEE_ID_HERE",
  "certifications_batch": [
    {
      "certification_type": "travail_hauteur",
      "valid": true,
      "expiry": "2025-12-31",
      "issuer": "CNESST",
      "doc_id": "HAR-456"
    },
    {
      "certification_type": "manipulation_substances",
      "valid": false,
      "expiry": "2024-08-01",
      "issuer": "CNESST",
      "doc_id": "HAZ-789"
    }
  ]
}

### Test 17: R√©cup√©rer tous employ√©s avec certifications expirantes
GET {{baseUrl}}/certifications?check_expiring=true&warning_days=60
{{headers}}

###
# üß™ TESTS DE S√âCURIT√â
###

### Test 18: Tentative acc√®s sans tenant_id (doit √©chouer)
GET {{baseUrl}}/employees
Content-Type: application/json

### Test 19: Tentative acc√®s avec mauvais tenant_id (doit √™tre vide)
GET {{baseUrl}}/employees
Content-Type: application/json
x-tenant-id: unauthorized_tenant

### Test 20: Test validation donn√©es employ√© (champs requis)
POST {{baseUrl}}/employees
{{headers}}

{
  "phone_number": "514-555-0123"
}

### Test 21: Test validation taux de facturation (taux n√©gatifs)
POST {{baseUrl}}/billing
{{headers}}

{
  "rate_normal": -50.00,
  "rate_overtime_1_5": 0,
  "rate_overtime_2_0": 100.00
}

###
# üìä TESTS PERFORMANCE
###

### Test 22: Charge - Cr√©ation multiple employ√©s
POST {{baseUrl}}/employees
{{headers}}

{
  "first_name": "Employ√©",
  "last_name": "Test-001",
  "employee_number": "PERF001",
  "department": "Test"
}

### Test 23: Charge - R√©cup√©ration avec jointures
GET {{baseUrl}}/employees?includeSafety=true&status=all&department=all
{{headers}}

###
# üîç TESTS FONCTIONS SQL AVANC√âES
###

### Test 24: Test calcul billable (via fonction helpers si disponible)
# Note: Ces tests n√©cessitent d'avoir des fonctions expos√©es via API
# ou d'utiliser le SQL Editor directement dans Supabase

###
# üìù NOTES POUR LES TESTS
# 
# 1. Remplacer EMPLOYEE_ID_HERE par un vrai UUID apr√®s Test 1
# 2. Ajuster baseUrl selon votre d√©ploiement
# 3. V√©rifier que x-tenant-id correspond √† un tenant existant
# 4. Tests 18-21 doivent √©chouer avec erreurs appropri√©es
# 5. Monitor les temps de r√©ponse (<200ms recommand√©)
# 6. V√©rifier logs Supabase pour erreurs RLS
#
# üéØ R√âSULTATS ATTENDUS:
# ‚úÖ Tests 1-17: Succ√®s avec donn√©es correctes
# ‚ùå Tests 18-21: √âchec contr√¥l√© avec erreurs explicites  
# üìä Tests 22-23: Performance acceptable
###